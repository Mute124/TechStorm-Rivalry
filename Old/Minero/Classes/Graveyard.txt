       
     Block Graphics :

        this->m_blockmodel.materials[0].shader.locs[SHADER_LOC_VECTOR_VIEW] = GetShaderLocation(this->m_shader, "viewPos");   
        this->m_blockmodel.materials[0].shader.locs[SHADER_LOC_MATRIX_MODEL] = GetShaderLocation(this->m_shader, "matModel");
        this->m_blockmodel.materials[0].shader.locs[SHADER_LOC_COLOR_AMBIENT] = GetShaderLocation(this->m_shader, "ambient");
        this->m_blockmodel.materials[0].shader.locs[SHADER_LOC_MATRIX_MVP] = GetShaderLocation(this->m_shader, "mvp");

        
        this->m_blockmodel.materials[0].shader = this->m_shader;
         
         
        Texture2D Bricks = LoadBlockTexture("resources/textures/Brick.png");
        Texture2D Bricks_Normal = LoadBlockTexture("resources/textures/Brick_normals.png");



        this->m_blockmodel.materials[0].maps[MATERIAL_MAP_ROUGHNESS].texture = Bricks;
        this->m_blockmodel.materials[0].maps[MATERIAL_MAP_ROUGHNESS].value = 1.0f; 


        SetMaterialTexture(this->m_blockmodel.materials, MATERIAL_MAP_DIFFUSE, Bricks);
        SetTextureFilter(Bricks, TEXTURE_FILTER_TRILINEAR);

        float diffval = 0.5f; // Shader value
        SetShaderValue(this->m_shader, GetShaderLocation(this->m_shader, "colDiffuse"), &diffval, SHADER_UNIFORM_FLOAT);
